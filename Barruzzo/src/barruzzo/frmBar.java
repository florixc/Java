/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package barruzzo;

import barruzzo.model.Classe;
import barruzzo.model.Cliente;
import barruzzo.model.Ordinazione;
import barruzzo.model.Prodotto;
import java.io.File;
import java.io.FileOutputStream;
import java.io.StringReader;
import java.util.ArrayList;
import nu.xom.Builder;
import nu.xom.Document;
import nu.xom.Element;
import nu.xom.Elements;
import nu.xom.Serializer;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Studente
 */
public class frmBar extends javax.swing.JFrame {

    ArrayList listaprodotti; //di prodotti
    ArrayList listaclassi;
    ArrayList listaordinazioni;
    ArrayList listaclienti;

    /**
     * Creates new form frmBar
     */
    public frmBar() {
        initComponents();
        //listaprodotti = new ArrayList();

        //Singleton singleton=new Singleton(); //non si pu√≤ fare
        Singleton singleton = Singleton.getInstance();
        listaprodotti = singleton.getListaprodotti();
        listaclassi = singleton.getListaclassi();
        listaordinazioni = singleton.getListaordinazioni();
        listaclienti = singleton.getListaclienti();

        for (int i = 0; i < listaclassi.size(); i++) {
            Classe classe = (Classe) listaclassi.get(i);
            cmbClasse.addItem(classe.getNome());
        }
    }

    private void stampa() {
        for (int i = 0; i < listaprodotti.size(); i++) {
            Prodotto prodotto = (Prodotto) listaprodotti.get(i);
            txtaStampa.append(prodotto.toString() + "\n");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtaStampa = new javax.swing.JTextArea();
        btnInserisciProdotto = new javax.swing.JButton();
        txtIdProdotto = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtPrezzo = new javax.swing.JTextField();
        txtQuantita = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnStampaProdotti = new javax.swing.JButton();
        btnGeneraXMLAI = new javax.swing.JButton();
        btnImportaXMLAI = new javax.swing.JButton();
        btnImportaXML = new javax.swing.JButton();
        EsportaXML = new javax.swing.JButton();
        EsportaJSON = new javax.swing.JButton();
        ImportaJSON = new javax.swing.JButton();
        btnStampaClienti = new javax.swing.JButton();
        btnStampaClassi = new javax.swing.JButton();
        btnStampaOrdinazioni = new javax.swing.JButton();
        btnStampaOrdinazioniClasse = new javax.swing.JButton();
        cmbClasse = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtaStampa.setColumns(20);
        txtaStampa.setRows(5);
        jScrollPane1.setViewportView(txtaStampa);

        btnInserisciProdotto.setText("InserisciProdotto");
        btnInserisciProdotto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserisciProdottoActionPerformed(evt);
            }
        });

        txtIdProdotto.setText("txtIdProdotto");

        txtNome.setText("txtNome");

        txtPrezzo.setText("txtPrezzo");

        txtQuantita.setText("txtQuantita");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Barruzzo barman");

        btnStampaProdotti.setText("StampaProdotti");
        btnStampaProdotti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStampaProdottiActionPerformed(evt);
            }
        });

        btnGeneraXMLAI.setText("GeneraXMLAI");
        btnGeneraXMLAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneraXMLAIActionPerformed(evt);
            }
        });

        btnImportaXMLAI.setText("ImportaXMLAI");
        btnImportaXMLAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportaXMLAIActionPerformed(evt);
            }
        });

        btnImportaXML.setText("ImportaXML");
        btnImportaXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportaXMLActionPerformed(evt);
            }
        });

        EsportaXML.setText("EsportaXML");
        EsportaXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EsportaXMLActionPerformed(evt);
            }
        });

        EsportaJSON.setText("EsportaJSON");
        EsportaJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EsportaJSONActionPerformed(evt);
            }
        });

        ImportaJSON.setText("ImportaJSON");
        ImportaJSON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportaJSONActionPerformed(evt);
            }
        });

        btnStampaClienti.setText("StampaClienti");
        btnStampaClienti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStampaClientiActionPerformed(evt);
            }
        });

        btnStampaClassi.setText("StampaClassi");
        btnStampaClassi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStampaClassiActionPerformed(evt);
            }
        });

        btnStampaOrdinazioni.setText("StampaOrdinazioni");
        btnStampaOrdinazioni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStampaOrdinazioniActionPerformed(evt);
            }
        });

        btnStampaOrdinazioniClasse.setText("StampaOrdinazioniClasse");
        btnStampaOrdinazioniClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStampaOrdinazioniClasseActionPerformed(evt);
            }
        });

        cmbClasse.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInserisciProdotto)
                            .addComponent(btnStampaProdotti)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnStampaClienti)
                                    .addComponent(btnStampaClassi)
                                    .addComponent(btnStampaOrdinazioni))
                                .addGap(210, 210, 210)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIdProdotto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPrezzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtQuantita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStampaOrdinazioniClasse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(ImportaJSON))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cmbClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImportaXML)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EsportaJSON)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EsportaXML)
                                .addGap(116, 116, 116)
                                .addComponent(btnImportaXMLAI)
                                .addGap(18, 18, 18)
                                .addComponent(btnGeneraXMLAI)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImportaXMLAI)
                            .addComponent(btnGeneraXMLAI)
                            .addComponent(EsportaXML)
                            .addComponent(btnImportaXML))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EsportaJSON)
                            .addComponent(ImportaJSON)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtIdProdotto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrezzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnInserisciProdotto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnStampaProdotti)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStampaClienti))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnStampaClassi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStampaOrdinazioni)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStampaOrdinazioniClasse)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserisciProdottoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserisciProdottoActionPerformed
        //txtaStampa.setText("ciao \n");
        int idProdotto = 0;
        String nome = "";
        float prezzo = 0;
        int quantita = 0;

        try {
            //idAutomobile = Integer.valueOf(txtIdAutomobile.getText());
            idProdotto = Integer.valueOf(txtIdProdotto.getText());
            nome = txtNome.getText();
            prezzo = Float.valueOf(txtPrezzo.getText());
            quantita = Integer.valueOf(txtQuantita.getText());
            Prodotto prodotto = new Prodotto(idProdotto, nome, prezzo, quantita);
            listaprodotti.add(prodotto);
            //txtaStampa.append(automobile.toString() + "\n");
            txtaStampa.setText("inserito!!!" + prodotto.toString() + "\n");
        } catch (NumberFormatException numberFormatException) {
            txtaStampa.setText("Errore nei dati!!!\n");
        }
        stampa();
     }//GEN-LAST:event_btnInserisciProdottoActionPerformed

    private void btnStampaProdottiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStampaProdottiActionPerformed
        txtaStampa.setText("");
        stampa();
    }//GEN-LAST:event_btnStampaProdottiActionPerformed

    private void btnGeneraXMLAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneraXMLAIActionPerformed
        ArrayList<Prodotto> prodotti = listaprodotti;
        String fileName = "barruzzo.xml";

        Element root = new Element("barruzzo");
        Document doc = new Document(root);

        Element prodottiElem = new Element("prodotti");
        root.appendChild(prodottiElem);

        for (Prodotto prodotto : prodotti) {
            Element prodottoElem = new Element("prodotto");
            prodottiElem.appendChild(prodottoElem);

            Element idprodottoElem = new Element("idprodotto");
            idprodottoElem.appendChild(String.valueOf(prodotto.getIdProdotto()));
            prodottoElem.appendChild(idprodottoElem);

            Element nomeElem = new Element("nome");
            nomeElem.appendChild(prodotto.getNome());
            prodottoElem.appendChild(nomeElem);

            Element prezzoElem = new Element("prezzo");
            prezzoElem.appendChild(String.valueOf(prodotto.getPrezzo()));
            prodottoElem.appendChild(prezzoElem);

            Element quantitaElem = new Element("quantita");
            quantitaElem.appendChild(String.valueOf(prodotto.getQuantita()));
            prodottoElem.appendChild(quantitaElem);
        }

        try {
            Serializer serializer = new Serializer(new FileOutputStream(fileName), "ISO-8859-1");
            serializer.setIndent(4);
            serializer.write(doc);
            serializer.flush();
        } catch (Exception e) {
            e.printStackTrace();
        }    }//GEN-LAST:event_btnGeneraXMLAIActionPerformed


    private void btnImportaXMLAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportaXMLAIActionPerformed

        String fileName = "barruzzo.xml";
        ArrayList<Prodotto> prodotti = listaprodotti;

        try {
            Builder builder = new Builder();
            File file = new File(fileName);
            Document doc = builder.build(file);
            Element root = doc.getRootElement();

            Element prodottie = root.getFirstChildElement("prodotti");
            Elements prodottoElements = prodottie.getChildElements("prodotto");

            //Elements prodottoElements = root.getChildElements("prodotto");
            txtaStampa.setText(prodottoElements.size() + "");
            for (int i = 0; i < prodottoElements.size(); i++) {
                Element prodottoElement = prodottoElements.get(i);
                Prodotto prodotto = new Prodotto();
                prodotto.setIdProdotto(Integer.parseInt(prodottoElement.getFirstChildElement("idprodotto").getValue()));
                prodotto.setNome(prodottoElement.getFirstChildElement("nome").getValue());
                prodotto.setPrezzo(Float.parseFloat(prodottoElement.getFirstChildElement("prezzo").getValue()));
                prodotto.setQuantita(Integer.parseInt(prodottoElement.getFirstChildElement("quantita").getValue()));
                prodotti.add(prodotto);
            }
        } catch (Exception e) {
            e.printStackTrace();

        }

        /*     String fileName = "barruzzo.xml";
        ArrayList<Prodotto> prodotti = listaprodotti;

        try {
            Builder builder = new Builder();
            //File file = new File(fileName);
            Document doc = builder.build(new StringReader(txtaStampa.getText()));
            Element root = doc.getRootElement();
            Element prodottie = root.getFirstChildElement("prodotti");

            Elements prodottoElements = prodottie.getChildElements("prodotto");
           txtaStampa.setText(prodottoElements.size()+"");
            for (int i = 0; i < prodottoElements.size(); i++) {
                Element prodottoElement = prodottoElements.get(i);
                Prodotto prodotto = new Prodotto();
                prodotto.setIdProdotto(Integer.parseInt(prodottoElement.getFirstChildElement("idprodotto").getValue()));
                prodotto.setNome(prodottoElement.getFirstChildElement("nome").getValue());
                prodotto.setPrezzo(Float.parseFloat(prodottoElement.getFirstChildElement("prezzo").getValue()));
                prodotto.setQuantita(Integer.parseInt(prodottoElement.getFirstChildElement("quantita").getValue()));
                prodotti.add(prodotto);
            }
        } catch (Exception e) {
            e.printStackTrace();
            
        }*/
    }//GEN-LAST:event_btnImportaXMLAIActionPerformed

    private void btnImportaXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportaXMLActionPerformed
        listaprodotti.clear();
        Builder builder = new Builder();
        try {
            Document doc = builder.build(new StringReader(txtaStampa.getText()));
            txtaStampa.setText("");
            Element barruzzo = doc.getRootElement();
            Element prodotti = barruzzo.getFirstChildElement("prodotti");
            Elements listaprod = prodotti.getChildElements("prodotto");
            for (int i = 0; i < listaprod.size(); i++) {
                Element prodotto = listaprod.get(i);
                Element idprodotto = prodotto.getFirstChildElement("idprodotto");
                Element nome = prodotto.getFirstChildElement("nome");
                Element prezzo = prodotto.getFirstChildElement("prezzo");
                Element quantita = prodotto.getFirstChildElement("quantita");
                listaprodotti.add(new Prodotto(idprodotto, nome, prezzo, quantita));
                //listaauto.add(new Automobile(Integer.valueOf(idautomobile.getValue()), modello.getValue(), marca.getValue(), carrozzeria.getValue(), alimentazione.getValue(), Integer.valueOf(cilindrata.getValue()), Integer.valueOf(potenza.getValue()), Integer.valueOf(prezzo.getValue())));
            }
        } catch (Exception ex) {
            System.err.println("errore");
        }
        stampa();    }//GEN-LAST:event_btnImportaXMLActionPerformed

    private void EsportaXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EsportaXMLActionPerformed
        Element barruzzo = new Element("barruzzo");
        Element prodotti = new Element("prodotti");
        barruzzo.appendChild(prodotti);
        for (int i = 0; i < listaprodotti.size(); i++) {
            Element prodotto = new Element("prodotto");
            Prodotto prod = (Prodotto) listaprodotti.get(i);
            Element idprodotto = new Element("idprodotto");
            idprodotto.appendChild(prod.getIdProdotto() + "");
            Element nome = new Element("nome");
            nome.appendChild(prod.getNome());
            Element prezzo = new Element("prezzo");
            prezzo.appendChild(prod.getPrezzo() + "");
            Element quantita = new Element("quantita");
            quantita.appendChild(prod.getQuantita() + "");
            prodotto.appendChild(idprodotto);
            prodotto.appendChild(nome);
            prodotto.appendChild(prezzo);
            prodotto.appendChild(quantita);
            prodotti.appendChild(prodotto);
        }
        Document doc = new Document(barruzzo);
        txtaStampa.setText(doc.toXML());
    }//GEN-LAST:event_EsportaXMLActionPerformed

    private void EsportaJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EsportaJSONActionPerformed
        JSONObject radice = new JSONObject();
        JSONArray prodotti = new JSONArray();
        for (int i = 0; i < listaprodotti.size(); i++) {
            Prodotto prodotto = (Prodotto) listaprodotti.get(i);
            JSONObject prod = new JSONObject();
            prod.put("idprodotto", prodotto.getIdProdotto());
            prod.put("nome", prodotto.getNome());
            prod.put("prezzo", prodotto.getPrezzo());
            prod.put("quantita", prodotto.getQuantita());
            prodotti.add(prod);
        }
        radice.put("Prodotti", prodotti);
        txtaStampa.setText(radice.toJSONString());
    }//GEN-LAST:event_EsportaJSONActionPerformed

    private void ImportaJSONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportaJSONActionPerformed
        JSONParser parser = new JSONParser();
        try {
            JSONObject radice = (JSONObject) parser.parse(txtaStampa.getText());
            JSONArray prodotti = (JSONArray) radice.get("Prodotti");
            for (int i = 0; i < prodotti.size(); i++) {
                JSONObject prod = (JSONObject) prodotti.get(i);
                Prodotto prodotto = new Prodotto();
                prodotto.setIdProdotto(((Long) prod.get("idprodotto")).intValue());
                prodotto.setNome((String) prod.get("nome"));
                prodotto.setPrezzo(((Double) prod.get("prezzo")).floatValue()); //attenzione ai vari bugs
                prodotto.setQuantita(((Long) prod.get("quantita")).intValue());
                listaprodotti.add(prodotto);
            }
        } catch (Exception e) {
            System.out.println("errore" + e.getMessage());
            e.printStackTrace();

        }
    }//GEN-LAST:event_ImportaJSONActionPerformed

    private void btnStampaClientiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStampaClientiActionPerformed
        txtaStampa.setText("");
        for (int i = 0; i < listaclienti.size(); i++) {
            Cliente cliente = (Cliente) listaclienti.get(i);
            txtaStampa.append(cliente.toString() + "\n");
        }
    }//GEN-LAST:event_btnStampaClientiActionPerformed

    private void btnStampaClassiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStampaClassiActionPerformed
        txtaStampa.setText("");
        for (int i = 0; i < listaclassi.size(); i++) {
            Classe classe = (Classe) listaclassi.get(i);
            txtaStampa.append(classe.toString() + "\n");
        }
    }//GEN-LAST:event_btnStampaClassiActionPerformed

    private void btnStampaOrdinazioniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStampaOrdinazioniActionPerformed
        float somma = 0;
        txtaStampa.setText("");
        for (int i = 0; i < listaordinazioni.size(); i++) {
            Ordinazione ordinazione = (Ordinazione) listaordinazioni.get(i);
            txtaStampa.append(ordinazione.toString() + "\n");
            somma = somma + ordinazione.getProdotto().getPrezzo();
        }
        txtaStampa.append("Totale:" + somma + "\n");

    }//GEN-LAST:event_btnStampaOrdinazioniActionPerformed

    private void btnStampaOrdinazioniClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStampaOrdinazioniClasseActionPerformed
        float somma = 0;
        //String classe = "3CIET";
        String classe = (String)cmbClasse.getSelectedItem();
        txtaStampa.setText("");
        for (int i = 0; i < listaordinazioni.size(); i++) {
            Ordinazione ordinazione = (Ordinazione) listaordinazioni.get(i);
            if (ordinazione.getCliente().getClasse().getNome().equals(classe)) {
                txtaStampa.append(ordinazione.toString() + "\n");
                somma = somma + ordinazione.getProdotto().getPrezzo();
            }
        }
        txtaStampa.append("Totale:" + somma + "\n");    }//GEN-LAST:event_btnStampaOrdinazioniClasseActionPerformed

    /*
    
        private void btnImportaXMLActionPerformed(java.awt.event.ActionEvent evt) {                                              
        String fileName = "barruzzo.xml";
        ArrayList<Prodotto> prodotti = listaprodotti;

        try {
            Builder builder = new Builder();
            File file = new File(fileName);
            Document doc = builder.build(file);
            Element root = doc.getRootElement();
            Elements prodottoElements = root.getChildElements("prodotto");
            txtaStampa.setText(prodottoElements.size()+"");
            for (int i = 0; i < prodottoElements.size(); i++) {
                Element prodottoElement = prodottoElements.get(i);
                Prodotto prodotto = new Prodotto();
                prodotto.setIdProdotto(Integer.parseInt(prodottoElement.getFirstChildElement("idprodotto").getValue()));
                prodotto.setNome(prodottoElement.getFirstChildElement("nome").getValue());
                prodotto.setPrezzo(Float.parseFloat(prodottoElement.getFirstChildElement("prezzo").getValue()));
                prodotto.setQuantita(Integer.parseInt(prodottoElement.getFirstChildElement("quantita").getValue()));
                prodotti.add(prodotto);
            }
        } catch (Exception e) {
            e.printStackTrace();
            
        }
    }    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EsportaJSON;
    private javax.swing.JButton EsportaXML;
    private javax.swing.JButton ImportaJSON;
    private javax.swing.JButton btnGeneraXMLAI;
    private javax.swing.JButton btnImportaXML;
    private javax.swing.JButton btnImportaXMLAI;
    private javax.swing.JButton btnInserisciProdotto;
    private javax.swing.JButton btnStampaClassi;
    private javax.swing.JButton btnStampaClienti;
    private javax.swing.JButton btnStampaOrdinazioni;
    private javax.swing.JButton btnStampaOrdinazioniClasse;
    private javax.swing.JButton btnStampaProdotti;
    private javax.swing.JComboBox<String> cmbClasse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIdProdotto;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPrezzo;
    private javax.swing.JTextField txtQuantita;
    private javax.swing.JTextArea txtaStampa;
    // End of variables declaration//GEN-END:variables
}
